define("@scom/oswap-time-is-money-contract/contracts/Rewards.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-time-is-money-contract/contracts/Rewards.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "contract TimeIsMoneyI", "name": "timeIsMoney_", "type": "address" }, { "internalType": "contract IERC20", "name": "token_", "type": "address" }, { "internalType": "uint256", "name": "multiplier_", "type": "uint256" }, { "internalType": "uint256", "name": "initialReward_", "type": "uint256" }, { "internalType": "uint256", "name": "vestingPeriod_", "type": "uint256" }, { "internalType": "uint256", "name": "claimDeadline_", "type": "uint256" }, { "internalType": "address", "name": "admin_", "type": "address" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "AdminDrain", "type": "event" },
            { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "totalSoFar", "type": "uint256" }], "name": "Claim", "type": "event" },
            { "inputs": [], "name": "admin", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "claim", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
            { "inputs": [], "name": "claimDeadline", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "claimFor", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "claimSoFar", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "initialReward", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "multiplier", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "putFund", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
            { "inputs": [], "name": "reward", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "rewardForAccount", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "takeUnclaimed", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
            { "inputs": [], "name": "timeIsMoney", "outputs": [{ "internalType": "contract TimeIsMoneyI", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "token", "outputs": [{ "internalType": "contract IERC20", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "unclaimed", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "unclaimedForAccount", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "vestingPeriod", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "6101806040523480156200001257600080fd5b5060405162001728380380620017288339810160408190526200003591620001ab565b6001600055670de0b6b3a7640000841115620000985760405162461bcd60e51b815260206004820152601860248201527f496e697469616c2072657761726420746f6f206c61726765000000000000000060448201526064015b60405180910390fd5b6001600160a01b038116620000f05760405162461bcd60e51b815260206004820152601560248201527f496e76616c69642061646d696e2061646472657373000000000000000000000060448201526064016200008f565b6001600160a01b038616620001485760405162461bcd60e51b815260206004820152601460248201527f496e76616c69642072657761726420746f6b656e00000000000000000000000060448201526064016200008f565b6001600160601b0319606087811b821660805288901b1660a05260c085905260e08490526200018084670de0b6b3a764000062000226565b61010052610120929092526101405260601b6001600160601b03191661016052506200026392505050565b600080600080600080600060e0888a031215620001c6578283fd5b8751620001d3816200024a565b6020890151909750620001e6816200024a565b8096505060408801519450606088015193506080880151925060a0880151915060c088015162000216816200024a565b8091505092959891949750929550565b6000828210156200024557634e487b7160e01b81526011600452602481fd5b500390565b6001600160a01b03811681146200026057600080fd5b50565b60805160601c60a05160601c60c05160e0516101005161012051610140516101605160601c6113e6620003426000396000818161028b015281816102de0152818161056201526107fb0152600081816101ad015281816105ed01526106750152600081816101e401528181610b080152610b60015260008181610b320152610b8501526000818161021e0152610ad701526000818161011f0152610bd0015260008181610161015281816109840152610c560152600081816102ba0152818161039a0152818161072e015281816107d90152610dc901526113e66000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063828fd19d11610097578063eca679c311610066578063eca679c314610273578063f851a44014610286578063fbad76cb146102ad578063fc0c546a146102b557600080fd5b8063828fd19d14610206578063abee967c14610219578063ddeae03314610240578063e073bb4f1461025357600080fd5b80633ba86c44116100d35780633ba86c44146101a85780634e71d92d146101cf578063669416b8146101d75780637313ee5a146101df57600080fd5b80630d890369146101055780631b3ed7221461011a578063228cb733146101545780632b23c16e1461015c575b600080fd5b6101186101133660046111e2565b6102dc565b005b6101417f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6101416103c6565b6101837f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161014b565b6101417f000000000000000000000000000000000000000000000000000000000000000081565b6101186103d6565b610141610458565b6101417f000000000000000000000000000000000000000000000000000000000000000081565b6101416102143660046111c8565b61047d565b6101417f000000000000000000000000000000000000000000000000000000000000000081565b61011861024e3660046111c8565b61048e565b6101416102613660046111c8565b60016020526000908152604090205481565b6101416102813660046111c8565b610511565b6101837f000000000000000000000000000000000000000000000000000000000000000081565b61011861054a565b6101837f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163314610380576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4e6f742066726f6d2061646d696e00000000000000000000000000000000000060448201526064015b60405180910390fd5b6103c273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016833084610856565b5050565b60006103d133610938565b905090565b60026000541415610443576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610377565b600260005561045133610cef565b6001600055565b33600081815260016020526040812054909161047390610938565b6103d1919061133e565b600061048882610938565b92915050565b600260005414156104fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610377565b600260005561050981610cef565b506001600055565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602052604081205461054083610938565b610488919061133e565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146105e9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f6e6c79207468652061646d696e2063616e20646f20746869732100000000006044820152606401610377565b60007f000000000000000000000000000000000000000000000000000000000000000011610673576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f20636c61696d20646561646c696e65207365742e000000000000000000006044820152606401610377565b7f00000000000000000000000000000000000000000000000000000000000000004210156106fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4974277320746f6f206561726c7920746f20646f20746869732e0000000000006044820152606401610377565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b15801561078557600080fd5b505afa158015610799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bd919061122b565b905061082073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083610e46565b6040518181527f146bbc9b753597a27f70129b547228bac3f0a1fd36ee128a15367d259ab427149060200160405180910390a150565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526109329085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610ea1565b50505050565b6040517f34265c4800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152600091829182917f0000000000000000000000000000000000000000000000000000000000000000909116906334265c489060240160206040518083038186803b1580156109c857600080fd5b505afa1580156109dc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a00919061122b565b905060008111610a6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f596f7520617265206e6f74206120706172746974696f6e65722e0000000000006044820152606401610377565b804211610ad5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f5265776172647320686173206e6f742073746172746564207965742e000000006044820152606401610377565b7f000000000000000000000000000000000000000000000000000000000000000091506000610b04824261133e565b90507f00000000000000000000000000000000000000000000000000000000000000008110610b5e57610b577f0000000000000000000000000000000000000000000000000000000000000000846112b0565b9250610bc0565b7f0000000000000000000000000000000000000000000000000000000000000000610ba9827f0000000000000000000000000000000000000000000000000000000000000000611301565b610bb391906112c8565b610bbd90846112b0565b92505b6000670de0b6b3a7640000610bf57f000000000000000000000000000000000000000000000000000000000000000086611301565b610bff91906112c8565b6040517f57344e6f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152919250600091670de0b6b3a76400009184917f000000000000000000000000000000000000000000000000000000000000000016906357344e6f9060240160206040518083038186803b158015610c9857600080fd5b505afa158015610cac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cd0919061122b565b610cda9190611301565b610ce491906112c8565b979650505050505050565b6000610cfa82610938565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604081205491925090610d2e908361133e565b905060008111610d9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f596f752068617665206e6f7468696e6720746f20636c61696d210000000000006044820152606401610377565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600160205260409020839055610df0907f0000000000000000000000000000000000000000000000000000000000000000168483610e46565b604080518281526020810184905273ffffffffffffffffffffffffffffffffffffffff8516917f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7910160405180910390a2505050565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610e9c9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064016108b0565b505050565b6000610f03826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610fad9092919063ffffffff16565b805190915015610e9c5780806020019051810190610f21919061120b565b610e9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610377565b6060610fbc8484600085610fc6565b90505b9392505050565b606082471015611058576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610377565b73ffffffffffffffffffffffffffffffffffffffff85163b6110d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610377565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516110ff9190611243565b60006040518083038185875af1925050503d806000811461113c576040519150601f19603f3d011682016040523d82523d6000602084013e611141565b606091505b5091509150610ce48282866060831561115b575081610fbf565b82511561116b5782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610377919061125f565b803573ffffffffffffffffffffffffffffffffffffffff811681146111c357600080fd5b919050565b6000602082840312156111d9578081fd5b610fbf8261119f565b600080604083850312156111f4578081fd5b6111fd8361119f565b946020939093013593505050565b60006020828403121561121c578081fd5b81518015158114610fbf578182fd5b60006020828403121561123c578081fd5b5051919050565b60008251611255818460208701611355565b9190910192915050565b602081526000825180602084015261127e816040850160208701611355565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600082198211156112c3576112c3611381565b500190565b6000826112fc577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561133957611339611381565b500290565b60008282101561135057611350611381565b500390565b60005b83811015611370578181015183820152602001611358565b838111156109325750506000910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220ff3ed5ebd018521381881ebded5cc125de897128b1250079a65fc7cf05468c3664736f6c63430008040033"
    };
});
define("@scom/oswap-time-is-money-contract/contracts/Rewards.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-time-is-money-contract/contracts/Rewards.json.ts"], function (require, exports, eth_contract_1, Rewards_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Rewards = void 0;
    class Rewards extends eth_contract_1.Contract {
        constructor(wallet, address) {
            super(wallet, address, Rewards_json_1.default.abi, Rewards_json_1.default.bytecode);
            this.assign();
        }
        deploy(params, options) {
            return this.__deploy([params.timeIsMoney, params.token, this.wallet.utils.toString(params.multiplier), this.wallet.utils.toString(params.initialReward), this.wallet.utils.toString(params.vestingPeriod), this.wallet.utils.toString(params.claimDeadline), params.admin], options);
        }
        parseAdminDrainEvent(receipt) {
            return this.parseEvents(receipt, "AdminDrain").map(e => this.decodeAdminDrainEvent(e));
        }
        decodeAdminDrainEvent(event) {
            let result = event.data;
            return {
                amount: new eth_contract_1.BigNumber(result.amount),
                _event: event
            };
        }
        parseClaimEvent(receipt) {
            return this.parseEvents(receipt, "Claim").map(e => this.decodeClaimEvent(e));
        }
        decodeClaimEvent(event) {
            let result = event.data;
            return {
                account: result.account,
                amount: new eth_contract_1.BigNumber(result.amount),
                totalSoFar: new eth_contract_1.BigNumber(result.totalSoFar),
                _event: event
            };
        }
        assign() {
            let admin_call = async (options) => {
                let result = await this.call('admin', [], options);
                return result;
            };
            this.admin = admin_call;
            let claimDeadline_call = async (options) => {
                let result = await this.call('claimDeadline', [], options);
                return new eth_contract_1.BigNumber(result);
            };
            this.claimDeadline = claimDeadline_call;
            let claimSoFar_call = async (param1, options) => {
                let result = await this.call('claimSoFar', [param1], options);
                return new eth_contract_1.BigNumber(result);
            };
            this.claimSoFar = claimSoFar_call;
            let initialReward_call = async (options) => {
                let result = await this.call('initialReward', [], options);
                return new eth_contract_1.BigNumber(result);
            };
            this.initialReward = initialReward_call;
            let multiplier_call = async (options) => {
                let result = await this.call('multiplier', [], options);
                return new eth_contract_1.BigNumber(result);
            };
            this.multiplier = multiplier_call;
            let reward_call = async (options) => {
                let result = await this.call('reward', [], options);
                return new eth_contract_1.BigNumber(result);
            };
            this.reward = reward_call;
            let rewardForAccount_call = async (account, options) => {
                let result = await this.call('rewardForAccount', [account], options);
                return new eth_contract_1.BigNumber(result);
            };
            this.rewardForAccount = rewardForAccount_call;
            let timeIsMoney_call = async (options) => {
                let result = await this.call('timeIsMoney', [], options);
                return result;
            };
            this.timeIsMoney = timeIsMoney_call;
            let token_call = async (options) => {
                let result = await this.call('token', [], options);
                return result;
            };
            this.token = token_call;
            let unclaimed_call = async (options) => {
                let result = await this.call('unclaimed', [], options);
                return new eth_contract_1.BigNumber(result);
            };
            this.unclaimed = unclaimed_call;
            let unclaimedForAccount_call = async (account, options) => {
                let result = await this.call('unclaimedForAccount', [account], options);
                return new eth_contract_1.BigNumber(result);
            };
            this.unclaimedForAccount = unclaimedForAccount_call;
            let vestingPeriod_call = async (options) => {
                let result = await this.call('vestingPeriod', [], options);
                return new eth_contract_1.BigNumber(result);
            };
            this.vestingPeriod = vestingPeriod_call;
            let claim_send = async (options) => {
                let result = await this.send('claim', [], options);
                return result;
            };
            let claim_call = async (options) => {
                let result = await this.call('claim', [], options);
                return;
            };
            this.claim = Object.assign(claim_send, {
                call: claim_call
            });
            let claimFor_send = async (account, options) => {
                let result = await this.send('claimFor', [account], options);
                return result;
            };
            let claimFor_call = async (account, options) => {
                let result = await this.call('claimFor', [account], options);
                return;
            };
            this.claimFor = Object.assign(claimFor_send, {
                call: claimFor_call
            });
            let putFundParams = (params) => [params.from, this.wallet.utils.toString(params.amount)];
            let putFund_send = async (params, options) => {
                let result = await this.send('putFund', putFundParams(params), options);
                return result;
            };
            let putFund_call = async (params, options) => {
                let result = await this.call('putFund', putFundParams(params), options);
                return;
            };
            this.putFund = Object.assign(putFund_send, {
                call: putFund_call
            });
            let takeUnclaimed_send = async (options) => {
                let result = await this.send('takeUnclaimed', [], options);
                return result;
            };
            let takeUnclaimed_call = async (options) => {
                let result = await this.call('takeUnclaimed', [], options);
                return;
            };
            this.takeUnclaimed = Object.assign(takeUnclaimed_send, {
                call: takeUnclaimed_call
            });
        }
    }
    exports.Rewards = Rewards;
    Rewards._abi = Rewards_json_1.default.abi;
});
define("@scom/oswap-time-is-money-contract/contracts/RewardsCommonStartDate.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-time-is-money-contract/contracts/RewardsCommonStartDate.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "contract TimeIsMoneyI", "name": "timeIsMoney_", "type": "address" }, { "internalType": "contract IERC20", "name": "token_", "type": "address" }, { "internalType": "uint256", "name": "multiplier_", "type": "uint256" }, { "internalType": "uint256", "name": "initialReward_", "type": "uint256" }, { "internalType": "uint256", "name": "vestingStartDate_", "type": "uint256" }, { "internalType": "uint256", "name": "vestingPeriod_", "type": "uint256" }, { "internalType": "uint256", "name": "claimDeadline_", "type": "uint256" }, { "internalType": "address", "name": "admin_", "type": "address" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "AdminDrain", "type": "event" },
            { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "totalSoFar", "type": "uint256" }], "name": "Claim", "type": "event" },
            { "inputs": [], "name": "admin", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "claim", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
            { "inputs": [], "name": "claimDeadline", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "claimFor", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "claimSoFar", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "initialReward", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "multiplier", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "putFund", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
            { "inputs": [], "name": "reward", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "rewardForAccount", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "takeUnclaimed", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
            { "inputs": [], "name": "timeIsMoney", "outputs": [{ "internalType": "contract TimeIsMoneyI", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "token", "outputs": [{ "internalType": "contract IERC20", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "unclaimed", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "unclaimedForAccount", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "vestingPeriod", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "vestingStartDate", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "6101a06040523480156200001257600080fd5b50604051620018b5380380620018b58339810160408190526200003591620002f9565b6001600055670de0b6b3a7640000851115620000985760405162461bcd60e51b815260206004820152601860248201527f496e697469616c2072657761726420746f6f206c61726765000000000000000060448201526064015b60405180910390fd5b6001600160a01b038116620000f05760405162461bcd60e51b815260206004820152601560248201527f496e76616c69642061646d696e2061646472657373000000000000000000000060448201526064016200008f565b6001600160a01b038716620001485760405162461bcd60e51b815260206004820152601460248201527f496e76616c69642072657761726420746f6b656e00000000000000000000000060448201526064016200008f565b876001600160a01b031663ed6d0c5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156200018257600080fd5b505afa15801562000197573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001bd91906200037e565b886001600160a01b031663302ef3f36040518163ffffffff1660e01b815260040160206040518083038186803b158015620001f757600080fd5b505afa1580156200020c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023291906200037e565b6200023e919062000397565b8410156200028f5760405162461bcd60e51b815260206004820152601a60248201527f496e76616c69642076657374696e67207374617274206461746500000000000060448201526064016200008f565b6001600160601b0319606088811b821660805289901b1660a05260c086905260e0859052620002c785670de0b6b3a7640000620003b2565b6101005261012093909352610140919091526101605260601b6001600160601b0319166101805250620003fb92505050565b600080600080600080600080610100898b03121562000316578384fd5b88516200032381620003e2565b60208a01519098506200033681620003e2565b8097505060408901519550606089015194506080890151935060a0890151925060c0890151915060e08901516200036d81620003e2565b809150509295985092959890939650565b60006020828403121562000390578081fd5b5051919050565b60008219821115620003ad57620003ad620003cc565b500190565b600082821015620003c757620003c7620003cc565b500390565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114620003f857600080fd5b50565b60805160601c60a05160601c60c05160e051610100516101205161014051610160516101805160601c6113c9620004ec600039600081816102cd01528181610505015261079e0152600081816101c801528181610590015261061801526000818161022601528181610aeb0152610b430152600081816101f701528181610a110152610ac2015260008181610b150152610b680152600081816102600152610a9a01526000818161013a0152610bb301526000818161017c015281816109270152610c390152600081816102fc01528181610338015281816106d10152818161077c0152610dac01526113c96000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c80637313ee5a116100b2578063e073bb4f11610081578063f851a44011610066578063f851a440146102c8578063fbad76cb146102ef578063fc0c546a146102f757600080fd5b8063e073bb4f14610295578063eca679c3146102b557600080fd5b80637313ee5a14610221578063828fd19d14610248578063abee967c1461025b578063ddeae0331461028257600080fd5b80633ba86c44116100ee5780633ba86c44146101c35780634e71d92d146101ea578063579acacc146101f2578063669416b81461021957600080fd5b80630d890369146101205780631b3ed72214610135578063228cb7331461016f5780632b23c16e14610177575b600080fd5b61013361012e3660046111c5565b61031e565b005b61015c7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b61015c610364565b61019e7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610166565b61015c7f000000000000000000000000000000000000000000000000000000000000000081565b610133610374565b61015c7f000000000000000000000000000000000000000000000000000000000000000081565b61015c6103fb565b61015c7f000000000000000000000000000000000000000000000000000000000000000081565b61015c6102563660046111ab565b610420565b61015c7f000000000000000000000000000000000000000000000000000000000000000081565b6101336102903660046111ab565b610431565b61015c6102a33660046111ab565b60016020526000908152604090205481565b61015c6102c33660046111ab565b6104b4565b61019e7f000000000000000000000000000000000000000000000000000000000000000081565b6101336104ed565b61019e7f000000000000000000000000000000000000000000000000000000000000000081565b61036073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168330846107f9565b5050565b600061036f336108db565b905090565b600260005414156103e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000556103f433610cd2565b6001600055565b336000818152600160205260408120549091610416906108db565b61036f9190611321565b600061042b826108db565b92915050565b6002600054141561049e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103dd565b60026000556104ac81610cd2565b506001600055565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600160205260408120546104e3836108db565b61042b9190611321565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461058c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f4f6e6c79207468652061646d696e2063616e20646f207468697321000000000060448201526064016103dd565b60007f000000000000000000000000000000000000000000000000000000000000000011610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4e6f20636c61696d20646561646c696e65207365742e0000000000000000000060448201526064016103dd565b7f00000000000000000000000000000000000000000000000000000000000000004210156106a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4974277320746f6f206561726c7920746f20646f20746869732e00000000000060448201526064016103dd565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b15801561072857600080fd5b505afa15801561073c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610760919061120e565b90506107c373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083610e29565b6040518181527f146bbc9b753597a27f70129b547228bac3f0a1fd36ee128a15367d259ab427149060200160405180910390a150565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526108d59085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610e84565b50505050565b6040517f34265c4800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152600091829182917f0000000000000000000000000000000000000000000000000000000000000000909116906334265c489060240160206040518083038186803b15801561096b57600080fd5b505afa15801561097f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a3919061120e565b905060008111610a0f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f596f7520617265206e6f74206120706172746974696f6e65722e00000000000060448201526064016103dd565b7f00000000000000000000000000000000000000000000000000000000000000004211610a98576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f5265776172647320686173206e6f742073746172746564207965742e0000000060448201526064016103dd565b7f000000000000000000000000000000000000000000000000000000000000000091506000610ae77f000000000000000000000000000000000000000000000000000000000000000042611321565b90507f00000000000000000000000000000000000000000000000000000000000000008110610b4157610b3a7f000000000000000000000000000000000000000000000000000000000000000084611293565b9250610ba3565b7f0000000000000000000000000000000000000000000000000000000000000000610b8c827f00000000000000000000000000000000000000000000000000000000000000006112e4565b610b9691906112ab565b610ba09084611293565b92505b6000670de0b6b3a7640000610bd87f0000000000000000000000000000000000000000000000000000000000000000866112e4565b610be291906112ab565b6040517f57344e6f00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8881166004830152919250600091670de0b6b3a76400009184917f000000000000000000000000000000000000000000000000000000000000000016906357344e6f9060240160206040518083038186803b158015610c7b57600080fd5b505afa158015610c8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb3919061120e565b610cbd91906112e4565b610cc791906112ab565b979650505050505050565b6000610cdd826108db565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604081205491925090610d119083611321565b905060008111610d7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f596f752068617665206e6f7468696e6720746f20636c61696d2100000000000060448201526064016103dd565b73ffffffffffffffffffffffffffffffffffffffff8084166000908152600160205260409020839055610dd3907f0000000000000000000000000000000000000000000000000000000000000000168483610e29565b604080518281526020810184905273ffffffffffffffffffffffffffffffffffffffff8516917f34fcbac0073d7c3d388e51312faf357774904998eeb8fca628b9e6f65ee1cbf7910160405180910390a2505050565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610e7f9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610853565b505050565b6000610ee6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610f909092919063ffffffff16565b805190915015610e7f5780806020019051810190610f0491906111ee565b610e7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103dd565b6060610f9f8484600085610fa9565b90505b9392505050565b60608247101561103b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016103dd565b73ffffffffffffffffffffffffffffffffffffffff85163b6110b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103dd565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516110e29190611226565b60006040518083038185875af1925050503d806000811461111f576040519150601f19603f3d011682016040523d82523d6000602084013e611124565b606091505b5091509150610cc78282866060831561113e575081610fa2565b82511561114e5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103dd9190611242565b803573ffffffffffffffffffffffffffffffffffffffff811681146111a657600080fd5b919050565b6000602082840312156111bc578081fd5b610fa282611182565b600080604083850312156111d7578081fd5b6111e083611182565b946020939093013593505050565b6000602082840312156111ff578081fd5b81518015158114610fa2578182fd5b60006020828403121561121f578081fd5b5051919050565b60008251611238818460208701611338565b9190910192915050565b6020815260008251806020840152611261816040850160208701611338565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600082198211156112a6576112a6611364565b500190565b6000826112df577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561131c5761131c611364565b500290565b60008282101561133357611333611364565b500390565b60005b8381101561135357818101518382015260200161133b565b838111156108d55750506000910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220123bc438f07092d9d350677e4d8109af289f13d9266926fb30ec8d42df37e1dc64736f6c63430008040033"
    };
});
define("@scom/oswap-time-is-money-contract/contracts/RewardsCommonStartDate.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-time-is-money-contract/contracts/RewardsCommonStartDate.json.ts"], function (require, exports, eth_contract_2, RewardsCommonStartDate_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.RewardsCommonStartDate = void 0;
    class RewardsCommonStartDate extends eth_contract_2.Contract {
        constructor(wallet, address) {
            super(wallet, address, RewardsCommonStartDate_json_1.default.abi, RewardsCommonStartDate_json_1.default.bytecode);
            this.assign();
        }
        deploy(params, options) {
            return this.__deploy([params.timeIsMoney, params.token, this.wallet.utils.toString(params.multiplier), this.wallet.utils.toString(params.initialReward), this.wallet.utils.toString(params.vestingStartDate), this.wallet.utils.toString(params.vestingPeriod), this.wallet.utils.toString(params.claimDeadline), params.admin], options);
        }
        parseAdminDrainEvent(receipt) {
            return this.parseEvents(receipt, "AdminDrain").map(e => this.decodeAdminDrainEvent(e));
        }
        decodeAdminDrainEvent(event) {
            let result = event.data;
            return {
                amount: new eth_contract_2.BigNumber(result.amount),
                _event: event
            };
        }
        parseClaimEvent(receipt) {
            return this.parseEvents(receipt, "Claim").map(e => this.decodeClaimEvent(e));
        }
        decodeClaimEvent(event) {
            let result = event.data;
            return {
                account: result.account,
                amount: new eth_contract_2.BigNumber(result.amount),
                totalSoFar: new eth_contract_2.BigNumber(result.totalSoFar),
                _event: event
            };
        }
        assign() {
            let admin_call = async (options) => {
                let result = await this.call('admin', [], options);
                return result;
            };
            this.admin = admin_call;
            let claimDeadline_call = async (options) => {
                let result = await this.call('claimDeadline', [], options);
                return new eth_contract_2.BigNumber(result);
            };
            this.claimDeadline = claimDeadline_call;
            let claimSoFar_call = async (param1, options) => {
                let result = await this.call('claimSoFar', [param1], options);
                return new eth_contract_2.BigNumber(result);
            };
            this.claimSoFar = claimSoFar_call;
            let initialReward_call = async (options) => {
                let result = await this.call('initialReward', [], options);
                return new eth_contract_2.BigNumber(result);
            };
            this.initialReward = initialReward_call;
            let multiplier_call = async (options) => {
                let result = await this.call('multiplier', [], options);
                return new eth_contract_2.BigNumber(result);
            };
            this.multiplier = multiplier_call;
            let reward_call = async (options) => {
                let result = await this.call('reward', [], options);
                return new eth_contract_2.BigNumber(result);
            };
            this.reward = reward_call;
            let rewardForAccount_call = async (account, options) => {
                let result = await this.call('rewardForAccount', [account], options);
                return new eth_contract_2.BigNumber(result);
            };
            this.rewardForAccount = rewardForAccount_call;
            let timeIsMoney_call = async (options) => {
                let result = await this.call('timeIsMoney', [], options);
                return result;
            };
            this.timeIsMoney = timeIsMoney_call;
            let token_call = async (options) => {
                let result = await this.call('token', [], options);
                return result;
            };
            this.token = token_call;
            let unclaimed_call = async (options) => {
                let result = await this.call('unclaimed', [], options);
                return new eth_contract_2.BigNumber(result);
            };
            this.unclaimed = unclaimed_call;
            let unclaimedForAccount_call = async (account, options) => {
                let result = await this.call('unclaimedForAccount', [account], options);
                return new eth_contract_2.BigNumber(result);
            };
            this.unclaimedForAccount = unclaimedForAccount_call;
            let vestingPeriod_call = async (options) => {
                let result = await this.call('vestingPeriod', [], options);
                return new eth_contract_2.BigNumber(result);
            };
            this.vestingPeriod = vestingPeriod_call;
            let vestingStartDate_call = async (options) => {
                let result = await this.call('vestingStartDate', [], options);
                return new eth_contract_2.BigNumber(result);
            };
            this.vestingStartDate = vestingStartDate_call;
            let claim_send = async (options) => {
                let result = await this.send('claim', [], options);
                return result;
            };
            let claim_call = async (options) => {
                let result = await this.call('claim', [], options);
                return;
            };
            this.claim = Object.assign(claim_send, {
                call: claim_call
            });
            let claimFor_send = async (account, options) => {
                let result = await this.send('claimFor', [account], options);
                return result;
            };
            let claimFor_call = async (account, options) => {
                let result = await this.call('claimFor', [account], options);
                return;
            };
            this.claimFor = Object.assign(claimFor_send, {
                call: claimFor_call
            });
            let putFundParams = (params) => [params.from, this.wallet.utils.toString(params.amount)];
            let putFund_send = async (params, options) => {
                let result = await this.send('putFund', putFundParams(params), options);
                return result;
            };
            let putFund_call = async (params, options) => {
                let result = await this.call('putFund', putFundParams(params), options);
                return;
            };
            this.putFund = Object.assign(putFund_send, {
                call: putFund_call
            });
            let takeUnclaimed_send = async (options) => {
                let result = await this.send('takeUnclaimed', [], options);
                return result;
            };
            let takeUnclaimed_call = async (options) => {
                let result = await this.call('takeUnclaimed', [], options);
                return;
            };
            this.takeUnclaimed = Object.assign(takeUnclaimed_send, {
                call: takeUnclaimed_call
            });
        }
    }
    exports.RewardsCommonStartDate = RewardsCommonStartDate;
    RewardsCommonStartDate._abi = RewardsCommonStartDate_json_1.default.abi;
});
define("@scom/oswap-time-is-money-contract/contracts/TimeIsMoney.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-time-is-money-contract/contracts/TimeIsMoney.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "address", "name": "token_", "type": "address" }, { "internalType": "uint256", "name": "maximumTotalLock_", "type": "uint256" }, { "internalType": "uint256", "name": "minimumLockTime_", "type": "uint256" }, { "internalType": "uint256", "name": "startOfEntryPeriod_", "type": "uint256" }, { "internalType": "uint256", "name": "endOfEntryPeriod_", "type": "uint256" }, { "internalType": "uint256", "name": "perAddressCap_", "type": "uint256" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "Deposit", "type": "event" },
            { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }, { "indexed": false, "internalType": "bool", "name": "heldLongEnough", "type": "bool" }], "name": "Withdrawal", "type": "event" },
            { "inputs": [], "name": "endOfEntryPeriod", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "getCredit", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "lock", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "lockAmount", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "maximumTotalLock", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "minimumLockTime", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "perAddressCap", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "readyToWithdraw", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "releaseTime", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "startOfEntryPeriod", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "token", "outputs": [{ "internalType": "contract IERC20", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "totalLocked", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "bool", "name": "allowWithdrawalBeforeRelease", "type": "bool" }], "name": "withdraw", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "withdrawn", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "61014060405234801561001157600080fd5b5060405161133738038061133783398101604081905261003091610064565b600160005560609590951b6001600160601b03191660805260a09390935260c09190915260e05261010052610120526100c1565b60008060008060008060c0878903121561007c578182fd5b86516001600160a01b0381168114610092578283fd5b6020880151604089015160608a015160808b015160a0909b0151939c929b509099909850965090945092505050565b60805160601c60a05160c05160e05161010051610120516111ec61014b60003960008181610171015261098901526000818161011c01526107f9015260008181610246015261076f01526000818161026d0152610b6401526000818161020c0152610a1a015260008181610294015281816105d50152818161067a0152610b0d01526111ec6000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806395bc3bd01161008c578063dd46706411610066578063dd4670641461022e578063e76a5de014610241578063ed6d0c5b14610268578063fc0c546a1461028f57600080fd5b806395bc3bd0146101d2578063a810a54c146101f2578063cbc2efbe1461020757600080fd5b806347dd5172116100c857806347dd51721461016c578063568914121461019357806357344e6f1461019c5780636ef61092146101af57600080fd5b80630a469e7a146100ef578063302ef3f31461011757806334265c481461014c575b600080fd5b6101026100fd36600461102a565b6102db565b60405190151581526020015b60405180910390f35b61013e7f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161010e565b61013e61015a36600461102a565b60036020526000908152604090205481565b61013e7f000000000000000000000000000000000000000000000000000000000000000081565b61013e60015481565b61013e6101aa36600461102a565b61036c565b6101026101bd36600461102a565b60046020526000908152604090205460ff1681565b61013e6101e036600461102a565b60026020526000908152604090205481565b61020561020036600461105e565b6103ca565b005b61013e7f000000000000000000000000000000000000000000000000000000000000000081565b61020561023c366004611096565b6106fb565b61013e7f000000000000000000000000000000000000000000000000000000000000000081565b61013e7f000000000000000000000000000000000000000000000000000000000000000081565b6102b67f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602052604081205415801590610334575073ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020544210155b8015610366575073ffffffffffffffffffffffffffffffffffffffff821660009081526004602052604090205460ff16155b92915050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120544210156103a157506000919050565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205490565b6002600054141561043c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260009081553381526004602052604090205460ff1615801561046e57503360009081526002602052604090205415155b6104d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4e6f20746f6b656e7320617661696c61626c6520746f2077697468647261772e6044820152606401610433565b3360009081526002602090815260408083205460039092529091205442101561063c5781610584576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f596f757220746f6b656e732077657265206e6f74206c6f636b6564206c6f6e6760448201527f20656e6f756768210000000000000000000000000000000000000000000000006064820152608401610433565b33600090815260026020908152604080832083905560039091528120819055600180548392906105b5908490611133565b909155506105fc905073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163383610bdf565b604080518281526000602082015233917f06e0c61e7e9f4912ee1f3ce060b59207b98f9a232d711462af3166aeeed1250a910160405180910390a26106f2565b33600081815260046020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556106b6907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169083610bdf565b604080518281526001602082015233917f06e0c61e7e9f4912ee1f3ce060b59207b98f9a232d711462af3166aeeed1250a910160405180910390a25b50506001600055565b60026000541415610768576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610433565b60026000557f00000000000000000000000000000000000000000000000000000000000000004210156107f7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4974277320746f6f206561726c7920746f20646f2074686973210000000000006044820152606401610433565b7f00000000000000000000000000000000000000000000000000000000000000004210610880576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f536f7272792c20796f752061746520746f6f206c6174652100000000000000006044820152606401610433565b336000908152600260205260409020541561091d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f596f75206861766520616c72656164792070617274696369706174656420696e60448201527f20746869732e00000000000000000000000000000000000000000000000000006064820152608401610433565b60008111610987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f596f752063616e6e6f74206c6f636b206e6f7468696e672100000000000000006044820152606401610433565b7f0000000000000000000000000000000000000000000000000000000000000000811115610a11576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f596f752063616e6e6f74206c6f636b206f76657220746865206c696d697421006044820152606401610433565b600154610a3e907f0000000000000000000000000000000000000000000000000000000000000000611133565b811115610af3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604760248201527f54686973206465706f73697420776f756c64206361757365206f757220746f7460448201527f616c206c6f636b656420616d6f756e7420746f2065786365656420746865206d60648201527f6178696d756d2e00000000000000000000000000000000000000000000000000608482015260a401610433565b610b3573ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333084610cb8565b33600090815260026020526040812082905560018054839290610b5990849061111b565b90915550610b8990507f00000000000000000000000000000000000000000000000000000000000000004261111b565b33600081815260036020526040908190209290925590517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c90610bcf9084815260200190565b60405180910390a2506001600055565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610cb39084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610d1c565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610d169085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401610c31565b50505050565b6000610d7e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16610e289092919063ffffffff16565b805190915015610cb35780806020019051810190610d9c919061107a565b610cb3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610433565b6060610e378484600085610e41565b90505b9392505050565b606082471015610ed3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610433565b73ffffffffffffffffffffffffffffffffffffffff85163b610f51576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610433565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051610f7a91906110ae565b60006040518083038185875af1925050503d8060008114610fb7576040519150601f19603f3d011682016040523d82523d6000602084013e610fbc565b606091505b5091509150610fcc828286610fd7565b979650505050505050565b60608315610fe6575081610e3a565b825115610ff65782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043391906110ca565b60006020828403121561103b578081fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610e3a578182fd5b60006020828403121561106f578081fd5b8135610e3a816111a5565b60006020828403121561108b578081fd5b8151610e3a816111a5565b6000602082840312156110a7578081fd5b5035919050565b600082516110c081846020870161114a565b9190910192915050565b60208152600082518060208401526110e981604085016020870161114a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000821982111561112e5761112e611176565b500190565b60008282101561114557611145611176565b500390565b60005b8381101561116557818101518382015260200161114d565b83811115610d165750506000910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b80151581146111b357600080fd5b5056fea2646970667358221220d97e87a8c428325cadb382f9267cb2c1c82b1c1a7411090c012660530f62700664736f6c63430008040033"
    };
});
define("@scom/oswap-time-is-money-contract/contracts/TimeIsMoney.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-time-is-money-contract/contracts/TimeIsMoney.json.ts"], function (require, exports, eth_contract_3, TimeIsMoney_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TimeIsMoney = void 0;
    class TimeIsMoney extends eth_contract_3.Contract {
        constructor(wallet, address) {
            super(wallet, address, TimeIsMoney_json_1.default.abi, TimeIsMoney_json_1.default.bytecode);
            this.assign();
        }
        deploy(params, options) {
            return this.__deploy([params.token, this.wallet.utils.toString(params.maximumTotalLock), this.wallet.utils.toString(params.minimumLockTime), this.wallet.utils.toString(params.startOfEntryPeriod), this.wallet.utils.toString(params.endOfEntryPeriod), this.wallet.utils.toString(params.perAddressCap)], options);
        }
        parseDepositEvent(receipt) {
            return this.parseEvents(receipt, "Deposit").map(e => this.decodeDepositEvent(e));
        }
        decodeDepositEvent(event) {
            let result = event.data;
            return {
                account: result.account,
                amount: new eth_contract_3.BigNumber(result.amount),
                _event: event
            };
        }
        parseWithdrawalEvent(receipt) {
            return this.parseEvents(receipt, "Withdrawal").map(e => this.decodeWithdrawalEvent(e));
        }
        decodeWithdrawalEvent(event) {
            let result = event.data;
            return {
                account: result.account,
                amount: new eth_contract_3.BigNumber(result.amount),
                heldLongEnough: result.heldLongEnough,
                _event: event
            };
        }
        assign() {
            let endOfEntryPeriod_call = async (options) => {
                let result = await this.call('endOfEntryPeriod', [], options);
                return new eth_contract_3.BigNumber(result);
            };
            this.endOfEntryPeriod = endOfEntryPeriod_call;
            let getCredit_call = async (account, options) => {
                let result = await this.call('getCredit', [account], options);
                return new eth_contract_3.BigNumber(result);
            };
            this.getCredit = getCredit_call;
            let lockAmount_call = async (param1, options) => {
                let result = await this.call('lockAmount', [param1], options);
                return new eth_contract_3.BigNumber(result);
            };
            this.lockAmount = lockAmount_call;
            let maximumTotalLock_call = async (options) => {
                let result = await this.call('maximumTotalLock', [], options);
                return new eth_contract_3.BigNumber(result);
            };
            this.maximumTotalLock = maximumTotalLock_call;
            let minimumLockTime_call = async (options) => {
                let result = await this.call('minimumLockTime', [], options);
                return new eth_contract_3.BigNumber(result);
            };
            this.minimumLockTime = minimumLockTime_call;
            let perAddressCap_call = async (options) => {
                let result = await this.call('perAddressCap', [], options);
                return new eth_contract_3.BigNumber(result);
            };
            this.perAddressCap = perAddressCap_call;
            let readyToWithdraw_call = async (account, options) => {
                let result = await this.call('readyToWithdraw', [account], options);
                return result;
            };
            this.readyToWithdraw = readyToWithdraw_call;
            let releaseTime_call = async (param1, options) => {
                let result = await this.call('releaseTime', [param1], options);
                return new eth_contract_3.BigNumber(result);
            };
            this.releaseTime = releaseTime_call;
            let startOfEntryPeriod_call = async (options) => {
                let result = await this.call('startOfEntryPeriod', [], options);
                return new eth_contract_3.BigNumber(result);
            };
            this.startOfEntryPeriod = startOfEntryPeriod_call;
            let token_call = async (options) => {
                let result = await this.call('token', [], options);
                return result;
            };
            this.token = token_call;
            let totalLocked_call = async (options) => {
                let result = await this.call('totalLocked', [], options);
                return new eth_contract_3.BigNumber(result);
            };
            this.totalLocked = totalLocked_call;
            let withdrawn_call = async (param1, options) => {
                let result = await this.call('withdrawn', [param1], options);
                return result;
            };
            this.withdrawn = withdrawn_call;
            let lock_send = async (amount, options) => {
                let result = await this.send('lock', [this.wallet.utils.toString(amount)], options);
                return result;
            };
            let lock_call = async (amount, options) => {
                let result = await this.call('lock', [this.wallet.utils.toString(amount)], options);
                return;
            };
            this.lock = Object.assign(lock_send, {
                call: lock_call
            });
            let withdraw_send = async (allowWithdrawalBeforeRelease, options) => {
                let result = await this.send('withdraw', [allowWithdrawalBeforeRelease], options);
                return result;
            };
            let withdraw_call = async (allowWithdrawalBeforeRelease, options) => {
                let result = await this.call('withdraw', [allowWithdrawalBeforeRelease], options);
                return;
            };
            this.withdraw = Object.assign(withdraw_send, {
                call: withdraw_call
            });
        }
    }
    exports.TimeIsMoney = TimeIsMoney;
    TimeIsMoney._abi = TimeIsMoney_json_1.default.abi;
});
define("@scom/oswap-time-is-money-contract/contracts/TimeIsMoneyEther.json.ts", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    ///<amd-module name='@scom/oswap-time-is-money-contract/contracts/TimeIsMoneyEther.json.ts'/> 
    exports.default = {
        "abi": [
            { "inputs": [{ "internalType": "uint256", "name": "maximumTotalLock_", "type": "uint256" }, { "internalType": "uint256", "name": "minimumLockTime_", "type": "uint256" }, { "internalType": "uint256", "name": "startOfEntryPeriod_", "type": "uint256" }, { "internalType": "uint256", "name": "endOfEntryPeriod_", "type": "uint256" }, { "internalType": "uint256", "name": "perAddressCap_", "type": "uint256" }], "stateMutability": "nonpayable", "type": "constructor" },
            { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "Deposit", "type": "event" },
            { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "account", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }, { "indexed": false, "internalType": "bool", "name": "heldLongEnough", "type": "bool" }], "name": "Withdrawal", "type": "event" },
            { "inputs": [], "name": "endOfEntryPeriod", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "getCredit", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "lock", "outputs": [], "stateMutability": "payable", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "lockAmount", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "maximumTotalLock", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "minimumLockTime", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "perAddressCap", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "readyToWithdraw", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "releaseTime", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "startOfEntryPeriod", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [], "name": "totalLocked", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
            { "inputs": [{ "internalType": "bool", "name": "allowWithdrawalBeforeRelease", "type": "bool" }], "name": "withdraw", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
            { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "withdrawn", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" }
        ],
        "bytecode": "61012060405234801561001157600080fd5b50604051610e9b380380610e9b83398101604081905261003091610050565b600160005560809490945260a09290925260c05260e0526101005261008f565b600080600080600060a08688031215610067578081fd5b5050835160208501516040860151606087015160809097015192989197509594509092509050565b60805160a05160c05160e05161010051610da56100f66000396000818161018d015261095a01526000818161011e01526107ca0152600081816102aa01526107400152600081816102de0152610af301526000818161027601526109eb0152610da56000f3fe6080604052600436106100d25760003560e01c80636ef610921161007f578063cbc2efbe11610059578063cbc2efbe14610264578063e76a5de014610298578063ed6d0c5b146102cc578063f83d08ba1461030057600080fd5b80636ef61092146101e557806395bc3bd014610215578063a810a54c1461024257600080fd5b806347dd5172116100b057806347dd51721461017b57806356891412146101af57806357344e6f146101c557600080fd5b80630a469e7a146100d7578063302ef3f31461010c57806334265c481461014e575b600080fd5b3480156100e357600080fd5b506100f76100f2366004610c7d565b610308565b60405190151581526020015b60405180910390f35b34801561011857600080fd5b506101407f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610103565b34801561015a57600080fd5b50610140610169366004610c7d565b60036020526000908152604090205481565b34801561018757600080fd5b506101407f000000000000000000000000000000000000000000000000000000000000000081565b3480156101bb57600080fd5b5061014060015481565b3480156101d157600080fd5b506101406101e0366004610c7d565b610399565b3480156101f157600080fd5b506100f7610200366004610c7d565b60046020526000908152604090205460ff1681565b34801561022157600080fd5b50610140610230366004610c7d565b60026020526000908152604090205481565b34801561024e57600080fd5b5061026261025d366004610cb8565b6103f7565b005b34801561027057600080fd5b506101407f000000000000000000000000000000000000000000000000000000000000000081565b3480156102a457600080fd5b506101407f000000000000000000000000000000000000000000000000000000000000000081565b3480156102d857600080fd5b506101407f000000000000000000000000000000000000000000000000000000000000000081565b6102626106cb565b73ffffffffffffffffffffffffffffffffffffffff811660009081526002602052604081205415801590610361575073ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020544210155b8015610393575073ffffffffffffffffffffffffffffffffffffffff821660009081526004602052604090205460ff16155b92915050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600360205260408120544210156103ce57506000919050565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526002602052604090205490565b60026000541415610469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260009081553381526004602052604090205460ff1615801561049b57503360009081526002602052604090205415155b610501576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4e6f2065746865727320617661696c61626c6520746f2077697468647261772e6044820152606401610460565b3360009081526002602090815260408083205460039092529091205442101561063257816105b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f596f7572206574686572732077657265206e6f74206c6f636b6564206c6f6e6760448201527f20656e6f756768210000000000000000000000000000000000000000000000006064820152608401610460565b33600090815260026020908152604080832083905560039091528120819055600180548392906105e2908490610d29565b909155506105f290503382610b6e565b604080518281526000602082015233917f06e0c61e7e9f4912ee1f3ce060b59207b98f9a232d711462af3166aeeed1250a910160405180910390a26106c2565b33600081815260046020526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556106749082610b6e565b336000818152600260209081526040918290205482519081526001918101919091527f06e0c61e7e9f4912ee1f3ce060b59207b98f9a232d711462af3166aeeed1250a910160405180910390a25b50506001600055565b60026000541415610738576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610460565b6002600055347f00000000000000000000000000000000000000000000000000000000000000004210156107c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4974277320746f6f206561726c7920746f20646f2074686973210000000000006044820152606401610460565b7f00000000000000000000000000000000000000000000000000000000000000004210610851576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f536f7272792c20796f752061746520746f6f206c6174652100000000000000006044820152606401610460565b33600090815260026020526040902054156108ee576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f596f75206861766520616c72656164792070617274696369706174656420696e60448201527f20746869732e00000000000000000000000000000000000000000000000000006064820152608401610460565b60008111610958576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f596f752063616e6e6f74206c6f636b206e6f7468696e672100000000000000006044820152606401610460565b7f00000000000000000000000000000000000000000000000000000000000000008111156109e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f596f752063616e6e6f74206c6f636b206f76657220746865206c696d697421006044820152606401610460565b600154610a0f907f0000000000000000000000000000000000000000000000000000000000000000610d29565b811115610ac4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604760248201527f54686973206465706f73697420776f756c64206361757365206f757220746f7460448201527f616c206c6f636b656420616d6f756e7420746f2065786365656420746865206d60648201527f6178696d756d2e00000000000000000000000000000000000000000000000000608482015260a401610460565b33600090815260026020526040812082905560018054839290610ae8908490610d11565b90915550610b1890507f000000000000000000000000000000000000000000000000000000000000000042610d11565b33600081815260036020526040908190209290925590517fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c90610b5e9084815260200190565b60405180910390a2506001600055565b6040805160008082526020820190925273ffffffffffffffffffffffffffffffffffffffff8416908390604051610ba59190610cd8565b60006040518083038185875af1925050503d8060008114610be2576040519150601f19603f3d011682016040523d82523d6000602084013e610be7565b606091505b5050905080610c78576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5472616e7366657248656c7065723a204554485f5452414e534645525f46414960448201527f4c454400000000000000000000000000000000000000000000000000000000006064820152608401610460565b505050565b600060208284031215610c8e578081fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114610cb1578182fd5b9392505050565b600060208284031215610cc9578081fd5b81358015158114610cb1578182fd5b60008251815b81811015610cf85760208186018101518583015201610cde565b81811115610d065782828501525b509190910192915050565b60008219821115610d2457610d24610d40565b500190565b600082821015610d3b57610d3b610d40565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220d7246743a80fbbba5b2260eee4fb6ef67a0ecfffcc3249f9cf2a36774cca5ea564736f6c63430008040033"
    };
});
define("@scom/oswap-time-is-money-contract/contracts/TimeIsMoneyEther.ts", ["require", "exports", "@ijstech/eth-contract", "@scom/oswap-time-is-money-contract/contracts/TimeIsMoneyEther.json.ts"], function (require, exports, eth_contract_4, TimeIsMoneyEther_json_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TimeIsMoneyEther = void 0;
    class TimeIsMoneyEther extends eth_contract_4.Contract {
        constructor(wallet, address) {
            super(wallet, address, TimeIsMoneyEther_json_1.default.abi, TimeIsMoneyEther_json_1.default.bytecode);
            this.assign();
        }
        deploy(params, options) {
            return this.__deploy([this.wallet.utils.toString(params.maximumTotalLock), this.wallet.utils.toString(params.minimumLockTime), this.wallet.utils.toString(params.startOfEntryPeriod), this.wallet.utils.toString(params.endOfEntryPeriod), this.wallet.utils.toString(params.perAddressCap)], options);
        }
        parseDepositEvent(receipt) {
            return this.parseEvents(receipt, "Deposit").map(e => this.decodeDepositEvent(e));
        }
        decodeDepositEvent(event) {
            let result = event.data;
            return {
                account: result.account,
                amount: new eth_contract_4.BigNumber(result.amount),
                _event: event
            };
        }
        parseWithdrawalEvent(receipt) {
            return this.parseEvents(receipt, "Withdrawal").map(e => this.decodeWithdrawalEvent(e));
        }
        decodeWithdrawalEvent(event) {
            let result = event.data;
            return {
                account: result.account,
                amount: new eth_contract_4.BigNumber(result.amount),
                heldLongEnough: result.heldLongEnough,
                _event: event
            };
        }
        assign() {
            let endOfEntryPeriod_call = async (options) => {
                let result = await this.call('endOfEntryPeriod', [], options);
                return new eth_contract_4.BigNumber(result);
            };
            this.endOfEntryPeriod = endOfEntryPeriod_call;
            let getCredit_call = async (account, options) => {
                let result = await this.call('getCredit', [account], options);
                return new eth_contract_4.BigNumber(result);
            };
            this.getCredit = getCredit_call;
            let lockAmount_call = async (param1, options) => {
                let result = await this.call('lockAmount', [param1], options);
                return new eth_contract_4.BigNumber(result);
            };
            this.lockAmount = lockAmount_call;
            let maximumTotalLock_call = async (options) => {
                let result = await this.call('maximumTotalLock', [], options);
                return new eth_contract_4.BigNumber(result);
            };
            this.maximumTotalLock = maximumTotalLock_call;
            let minimumLockTime_call = async (options) => {
                let result = await this.call('minimumLockTime', [], options);
                return new eth_contract_4.BigNumber(result);
            };
            this.minimumLockTime = minimumLockTime_call;
            let perAddressCap_call = async (options) => {
                let result = await this.call('perAddressCap', [], options);
                return new eth_contract_4.BigNumber(result);
            };
            this.perAddressCap = perAddressCap_call;
            let readyToWithdraw_call = async (account, options) => {
                let result = await this.call('readyToWithdraw', [account], options);
                return result;
            };
            this.readyToWithdraw = readyToWithdraw_call;
            let releaseTime_call = async (param1, options) => {
                let result = await this.call('releaseTime', [param1], options);
                return new eth_contract_4.BigNumber(result);
            };
            this.releaseTime = releaseTime_call;
            let startOfEntryPeriod_call = async (options) => {
                let result = await this.call('startOfEntryPeriod', [], options);
                return new eth_contract_4.BigNumber(result);
            };
            this.startOfEntryPeriod = startOfEntryPeriod_call;
            let totalLocked_call = async (options) => {
                let result = await this.call('totalLocked', [], options);
                return new eth_contract_4.BigNumber(result);
            };
            this.totalLocked = totalLocked_call;
            let withdrawn_call = async (param1, options) => {
                let result = await this.call('withdrawn', [param1], options);
                return result;
            };
            this.withdrawn = withdrawn_call;
            let lock_send = async (options) => {
                let result = await this.send('lock', [], options);
                return result;
            };
            let lock_call = async (options) => {
                let result = await this.call('lock', [], options);
                return;
            };
            this.lock = Object.assign(lock_send, {
                call: lock_call
            });
            let withdraw_send = async (allowWithdrawalBeforeRelease, options) => {
                let result = await this.send('withdraw', [allowWithdrawalBeforeRelease], options);
                return result;
            };
            let withdraw_call = async (allowWithdrawalBeforeRelease, options) => {
                let result = await this.call('withdraw', [allowWithdrawalBeforeRelease], options);
                return;
            };
            this.withdraw = Object.assign(withdraw_send, {
                call: withdraw_call
            });
        }
    }
    exports.TimeIsMoneyEther = TimeIsMoneyEther;
    TimeIsMoneyEther._abi = TimeIsMoneyEther_json_1.default.abi;
});
define("@scom/oswap-time-is-money-contract/contracts/index.ts", ["require", "exports", "@scom/oswap-time-is-money-contract/contracts/Rewards.ts", "@scom/oswap-time-is-money-contract/contracts/RewardsCommonStartDate.ts", "@scom/oswap-time-is-money-contract/contracts/TimeIsMoney.ts", "@scom/oswap-time-is-money-contract/contracts/TimeIsMoneyEther.ts"], function (require, exports, Rewards_1, RewardsCommonStartDate_1, TimeIsMoney_1, TimeIsMoneyEther_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TimeIsMoneyEther = exports.TimeIsMoney = exports.RewardsCommonStartDate = exports.Rewards = void 0;
    Object.defineProperty(exports, "Rewards", { enumerable: true, get: function () { return Rewards_1.Rewards; } });
    Object.defineProperty(exports, "RewardsCommonStartDate", { enumerable: true, get: function () { return RewardsCommonStartDate_1.RewardsCommonStartDate; } });
    Object.defineProperty(exports, "TimeIsMoney", { enumerable: true, get: function () { return TimeIsMoney_1.TimeIsMoney; } });
    Object.defineProperty(exports, "TimeIsMoneyEther", { enumerable: true, get: function () { return TimeIsMoneyEther_1.TimeIsMoneyEther; } });
});
define("@scom/oswap-time-is-money-contract", ["require", "exports", "@scom/oswap-time-is-money-contract/contracts/index.ts"], function (require, exports, Contracts) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Contracts = void 0;
    ///<amd-module name='@scom/oswap-time-is-money-contract'/> 
    exports.Contracts = Contracts;
});
